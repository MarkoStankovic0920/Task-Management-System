@model Tasks
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Edit";
}
@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("Admin"))
    {
    <form method="post" asp-action="Edit">
  
        <input type="hidden" asp-for="Id" />
                   <div asp-validation-summary="All" class="text-danger mt-0 mb-1 ms-3"></div>
        <div class="container-sm  p-4 text-light bg-dark  shadow-lg rounded w-100">
            <div class="row pb-2">
                <h2>Edit Task</h2>
                <hr />
            </div>
            <div class="mb-5 text-white d-flex flex-column gap-4">
                <div>
                    <label asp-for="Name" class="mb-1"></label>
                    <input asp-for="Name" class="form-control  text-black border-0" >
                </div>
                <div>
                    <label asp-for="Description" class="mb-1"></label> 
                    <input asp-for="Description" class="form-control  text-black border-0">
                </div>
                <div>
                    <label asp-for="DueDate" class="mb-1"></label>    
                    <input asp-for="DueDate" type="datetime-local" class="form-control  text-black border-0">
                </div>              
                <div>
                        <label asp-for="AssignedTo">Assigned To</label>
                       <select asp-for="AssignedTo" class="form-control text-black">
                           @if(@Model.AssignedTo != null)
                           {
                            <option value="@Model.AssignedTo" selected>@Model.AssignedTo</option>
                           }
                            @{
                                var userMembers = UserManager.GetUsersInRoleAsync("Member");
                                foreach (var obj in userMembers.Result.ToList())
                                {
                                    if(obj.Email!=Model.AssignedTo)
                                    {
                                    <option value="@obj.Email">@obj.Email</option>
                                    }
                                }
                            }
                            <option value="None">None</option>
                        </select>
                </div>
                    <div>
                        <label asp-for="Supervisor">Supervisor</label>
                        <select asp-for="Supervisor" class="form-control text-black">
                            @if(Model.Supervisor!= null)
                            {
                            <option value="@Model.Supervisor" selected>@Model.Supervisor</option>
                            }
                           
                            @{
                                var userSupervisors = UserManager.GetUsersInRoleAsync("Supervisor");
                                foreach (var obj in userSupervisors.Result.ToList())
                                {
                                    if(obj.Email!=Model.Supervisor)
                                    {
                                    <option value="@obj.Email">@obj.Email</option>
                                    }
                                }
                            }
                            <option value="None">None</option>
                        </select>

                    </div>
                <div>
                        <label asp-for="Status">Status</label>
                        <select name="status" id="status" class="form-control">
                            @if (Model.Status == "In Progress")
                            {
                                <option value="In Progress" selected>In Progress</option>
                                <option value="Completed">Completed</option>
                            }
                            else if (Model.Status == "Completed")
                            {
                                <option value="In Progress">In Progress</option>
                                <option value="Completed" selected>Completed</option>
                            }
                        </select>
                </div>
                    <div>
                        <input asp-for="Creator" value="@User.Identity.Name" class="text-white bg-dark shadow-lg rounded border-0" hidden />
                    </div>
            </div>
            <div class="d-flex justify-content-end gap-3">
                <button type="submit" class="btn btn-primary" style="width:200px;">Update</button>
                <a asp-controller="Tasks" asp-action="Index" class="btn btn-light" style="width:200px;">Back to Tasks</a>
            </div>
        </div>
    
        </form>
    }
    else if(User.IsInRole("Member"))
    {
        <form method="post"  asp-action="Edit">

            <input type="hidden" asp-for="Id"/>
            <div asp-validation-summary="All" class="text-danger mt-0 mb-1 ms-3"></div>
            <div class="container-sm  p-4 text-light bg-dark  shadow-lg rounded w-100">
                <div class="row pb-2">
                    <h2>Edit Task</h2>
                    <hr />
                </div>
                <div asp-validation-summary="All" class="text-danger mt-0 mb-1 ms-3"></div>
                <input asp-for="AssignedTo" value="@Model.AssignedTo" hidden />
                <div class="mb-5 text-white d-flex flex-column gap-4">
                    <div>
                        <label asp-for="Name" class="mb-1"></label>
                        <input asp-for="Name" class="form-control  text-black border-0" readonly>
                    </div>
                    <div>
                        <label asp-for="Description" class="mb-1"></label>
                        <input asp-for="Description" class="form-control  text-black border-0" readonly>
                    </div>
                    <div>
                        <label asp-for="DueDate" class="mb-1"></label>
                        <input asp-for="DueDate" type="datetime-local" class="form-control  text-black border-0" readonly>
                    </div>
                    <label asp-for="Supervisor" class="mb-1"></label>
                    <input asp-for="Supervisor" value="@Model.Supervisor" class="form-control text-black border-0" readonly />
                    <div>
                            <label asp-for="Status">Status</label>
                    <select name="status" id="status" class="form-control mb-4">
                                @if (Model.Status == "In Progress")
                                {
                                    <option value="In Progress" selected>In Progress</option>
                                    <option value="Completed">Completed</option>
                                }
                                else if (Model.Status == "Completed")
                                {
                                    <option value="In Progress">In Progress</option>
                                    <option value="Completed" selected>Completed</option>
                                }
                            </select>
                            
                    </div>
                    <div>
                        <input asp-for="Creator" value="@User.Identity.Name" class="text-white bg-dark shadow-lg rounded border-0" hidden />
                    </div>
                <div class="d-flex justify-content-end gap-3">
                    <button type="submit" class="btn btn-primary" style="width:200px;">Update</button>
                    <a asp-controller="Tasks" asp-action="Index" class="btn btn-light" style="width:200px;">Back to Tasks</a>
                </div>
            </div>
        </form>
    }
}
@section Scripts {
    @{
                        <partial name="_ValidationScriptsPartial" />
    }
}
